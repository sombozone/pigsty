---
#--------------------------------------------------------------#
# HONOR PG_SAFEGUARD                              [pg_safeguard]
#--------------------------------------------------------------#
- name: ABORT due to pg_safeguard enabled
  connection: local
  when: pg_safeguard|bool
  tags: [ always , pg_safeguard ]
  any_errors_fatal: true
  ignore_errors: false
  fail: msg="Abort due to pg_safeguard for {{ pg_cluster }}-{{ pg_seq }} @ {{ inventory_hostname }} is enabled, override with -e pg_safeguard=false"

#--------------------------------------------------------------#
# remove targets from prometheus        [pg_monitor][prometheus]
#--------------------------------------------------------------#
- import_tasks: prometheus.yml
  when: prometheus_enabled|bool
  tags: [ pg_monitor, prometheus , register ]

#--------------------------------------------------------------#
# remove pgsql datasource from grafana     [pg_monitor][grafana]
#--------------------------------------------------------------#
- import_tasks: grafana.yml
  when: grafana_enabled|bool
  tags: [ pg_monitor, grafana , register ]

#--------------------------------------------------------------#
# remove postgres monitor              [pg_monitor][pg_exporter]
#--------------------------------------------------------------#
- import_tasks: pg_exporter.yml
  tags: [ pg_monitor, pg_exporter ]

#--------------------------------------------------------------#
# remove pgbouncer monitor      [pg_monitor][pgbouncer_exporter]
#--------------------------------------------------------------#
- import_tasks: pgbouncer_exporter.yml
  tags: [ pg_monitor, pgbouncer_exporter ]

#--------------------------------------------------------------#
# remove pgbackrest monitor    [pg_monitor][pgbackrest_exporter]
#--------------------------------------------------------------#
- import_tasks: pgbackrest_exporter.yml
  tags: [ pg_monitor, pgbackrest_exporter ]

#--------------------------------------------------------------#
# remove pg dns records                         [pg_access][dns]
#--------------------------------------------------------------#
- import_tasks: dns.yml
  tags: [ pg_access, dns ]

#--------------------------------------------------------------#
# remove pg vip manager                         [pg_access][vip]
#--------------------------------------------------------------#
- import_tasks: vip.yml
  tags: [ pg_access, vip ]

#--------------------------------------------------------------#
# remove service                         [pg_access][pg_service]
#--------------------------------------------------------------#
- import_tasks: pg_service.yml
  tags: [ pg_access, pg_service, haproxy ]

#--------------------------------------------------------------#
# remove pgbouncer                        [pg_access][pgbouncer]
#--------------------------------------------------------------#
- import_tasks: pgbouncer.yml
  tags: [ pg_access, pgbouncer ]

#--------------------------------------------------------------#
# remove postgres                       [pg_bootstrap][postgres]
#--------------------------------------------------------------#
# pg_replica, pg_primary, pg_meta
- import_tasks: postgres.yml
  tags: [ pg_bootstrap, postgres, patroni ]

#--------------------------------------------------------------#
# remove backup                                      [pg_backup]
#--------------------------------------------------------------#
- import_tasks: pgbackrest.yml
  tags: [ pg_backup, pgbackrest ]
  when: pg_rm_backup|bool

#--------------------------------------------------------------#
# remove data                                          [pg_data]
#--------------------------------------------------------------#
- name: remove postgres data
  tags: pg_data
  when: pg_rm_data|bool
  ignore_errors: yes
  file: path={{ item }} state=absent
  with_items:
    - /pg/data
    - "{{ pg_fs_main }}/postgres"

#--------------------------------------------------------------#
# uninstall packages (and extensions)                   [pg_pkg]
#--------------------------------------------------------------#
# tag: pg_ext for remove extensions only
- import_tasks: uninstall.yml
  tags: pg_pkg
  when: pg_rm_pkg|bool

...